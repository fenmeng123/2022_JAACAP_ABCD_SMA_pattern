clc
clear
% Figure 2
% Cross-sectional analysis results
load I:\ABCDStudyNDA\ABCD_DataAnalysis\Code_ScreenAnalysis2021\Pipeline\JAACAP_Revision220920\Res_3_IntermediateData\ABCD4.0_Recoded_Baseline_Demo_Behav.mat
%% Figure 2A Neurocognition Radar plot
Y_table = Demograph(:,contains(Demograph.Properties.VariableNames,{'NIHTB_','UPPS_','BAS_','BIS_'}));
% change the order of columns in Y_table to keep same with previous Figure2
Y_table = movevars(Y_table,{'NIHTB_picvocab_ac','NIHTB_flanker_ac','NIHTB_list_ac','NIHTB_cardsort_ac',...
    'NIHTB_pattern_ac','NIHTB_picture_ac','NIHTB_reading_ac','NIHTB_fluidcomp_ac',...
    'NIHTB_cryst_ac','NIHTB_totalcomp_ac'},'Before','UPPS_NegUrge');
Y_table = movevars(Y_table,'UPPS_Sum','After','UPPS_LackPersev');
Y_table = movevars(Y_table,'BAS_Sum','After','BIS_Sum');

Covs_table = Demograph(:,contains(Demograph.Properties.VariableNames,...
    {'Idx','site_id_l','FamilyID','ACS_weight',...
    'interview_age','sex','Race_PrntRep','Ethnicity_PrntRep',...
    'ParentsEdu','ParentMarital','FamilyIncome','HouseholdSize',...
    'HouseholdStructure'}));
% plot settings
VarOI = Y_table.Variables;
fprintf('Group Indexes (being converted to double):\n')
GroupIdx = double(reordercats(Demograph.Idx,[2 1]));tabulate(GroupIdx)
Labels = replace(Y_table.Properties.VariableNames',...
    {'UPPS_NegUrge','UPPS_LackPlan','UPPS_SenSeek','UPPS_PosUrge','UPPS_LackPersev',...
    'BIS_Sum','BAS_RR','BAS_Drive','BAS_FS',...
    'NIHTB_picvocab_ac','NIHTB_flanker_ac','NIHTB_list_ac','NIHTB_cardsort_ac',...
    'NIHTB_pattern_ac','NIHTB_picture_ac','NIHTB_reading_ac','NIHTB_fluidcomp_ac',...
    'NIHTB_cryst_ac','NIHTB_totalcomp_ac','UPPS_Sum','BAS_Sum'},...
    {'UPPS-NU***','UPPS-LPlan***','UPPS-SS***','UPPS-PU***','UPPS-LPers***',...
    'BIS-Sum***','BAS-RR***','BAS-D***','BAS-FS***',...
    'Vocabulary***','Flanker','Working Memory***','Card Sort***',...
    'Processing Speed','Sequence Memory***','Reading***','Fluid Cognition Score***',...
    'Crystallized Cognition Score***','Total Cognition Score***','UPPS-Sum***','BAS-Sum***'});
Legends = {'Subgroup 1: Higher-frequency SMA','Subgroup2: Lower-frequency SMA'};
% clean the missing values
MissFlag = sum([isnan(GroupIdx) ismissing(Covs_table)],2)~=0;
fprintf('# %d subjects have missing values in Group Index and covaraites\n',sum(MissFlag))
fprintf('These subjects will be removed before radar ploting\n')
fprintf('Missing values in DVs will be processed by nanmean and nansem in polygonplot function\n')
fprintf('# N subjedcts = %d before cleaning\n',size(VarOI,1));
VarOI(MissFlag,:) = [];
GroupIdx(MissFlag) = [];
fprintf('# N subjedcts = %d after cleaning\n',size(VarOI,1));
fprintf('Group Indexes after cleaning:\n')
tabulate(GroupIdx)
% run radar plot
clr = flipud(lines(2));
h = s_BehavRadarPlot(VarOI,GroupIdx,Labels,Legends,clr);
set(h,'Position',[1          41        1920         962])
savefig(h,'../Res_2_Results/Figure2A_Raw.fig')
close(h)
%% Figure 2B Mental Health Radar plot
Y_table = Demograph(:,contains(Demograph.Properties.VariableNames,{'CBCL_','PPS_Number','PPS_Severity'}));
% Plot settings
VarOI = Y_table.Variables;
fprintf('Group Indexes (being converted to double):\n')
GroupIdx = double(reordercats(Demograph.Idx,[2 1]));tabulate(GroupIdx)
Labels = replace(Y_table.Properties.VariableNames',...
    {'CBCL_syn_anxdep_t','CBCL_syn_withdep_t','CBCL_syn_somatic_t',...
    'CBCL_syn_social_t','CBCL_syn_thought_t','CBCL_syn_attention_t',...
    'CBCL_syn_rulebreak_t','CBCL_syn_aggressive_t','CBCL_syn_internal_t',...
    'CBCL_syn_external_t','CBCL_syn_totprob_t','CBCL_dsm5_depress_t',...
    'CBCL_dsm5_anxdisord_t','CBCL_dsm5_somaticpr_t','CBCL_dsm5_adhd_t',...
    'CBCL_dsm5_opposit_t','CBCL_dsm5_conduct_t','CBCL_07_sct_t',...
    'CBCL_07_ocd_t','CBCL_07_stress_t','PPS_Number_Sum','PPS_Severity_Sum'},...
    {'AnxDep','WithDep','Somatic**',...
    'Social***','Thought***','Attention***',...
    'RuleBreak***','Aggresive***','Internal*',...
    'External***','TotProb***','Depress***',...
    'AbxDisord**','SomaticPr*','ADHD***',...
    'Opposite***','Conduct***','SCT**',...
    'OCD***','Stress**','PPS-Sum***','PPS-Severity Score***'});
Legends = {'Subgroup 1: Higher-frequency SMA','Subgroup2: Lower-frequency SMA'};
% clean the missing values
MissFlag = sum([isnan(GroupIdx) ismissing(Covs_table)],2)~=0;
fprintf('# %d subjects have missing values in Group Index and covaraites\n',sum(MissFlag))
fprintf('These subjects will be removed before radar ploting\n')
fprintf('Missing values in DVs will be processed by nanmean and nansem in polygonplot function\n')
fprintf('# N subjedcts = %d before cleaning\n',size(VarOI,1));
VarOI(MissFlag,:) = [];
GroupIdx(MissFlag) = [];
fprintf('# N subjedcts = %d after cleaning\n',size(VarOI,1));
fprintf('Group Indexes after cleaning:\n')
tabulate(GroupIdx)
h = s_BehavRadarPlot(VarOI,GroupIdx,Labels,Legends,clr);
set(h,'Position',[1          41        1920         962])
savefig(h,'../Res_2_Results/Figure2B_Raw.fig')
close(h)
%% Figure 2C RSFC Positive Network
clear
Res_RSFNC = readtable('../Res_2_Results/Table_FigS11.xlsx');
GordonName={'auditory network';'cingulo opercular network';...
    'cingulo parietal network';'default network';...
    'dorsal attention network';'fronto parietal network';...
    'none network';'retrosplenial temporal network';...
    'sensorimotor hand network';'sensorimotor mouth network';...
    'salience network';'ventral attention network';'visual network'};
asegName={'left cerebellum cortex';'left thalamus proper';...
    'left caudate';'left putamen';'left pallidum';'brain stem';...
    'left hippocampus';'left amygdala';'left accumbens area';...
    'left ventraldc';'right cerebellum cortex';'right thalamus proper';...
    'right caudate';'right putamen';'right pallidum';'right hippocampus';...
    'right amygdala';'right accumbens area';'right ventraldc'};
NetName=[GordonName;asegName];
beta_NetMatrix = s_GetAdjMatrix(NetName,Res_RSFNC(Res_RSFNC.FDR_pvals<0.05,:));
GordonName={'AuN';'CON';...
    'CPN';'DMN';...
    'DAN';'FPN';...
    'none';'RsTN';...
    'SmHN';'SmMN';...
    'SN';'VAN';'ViN'};
asegName={'cerebellum_L';'thalamus_L';...
    'caudate_L';'putamen_L';'pallidum_L';'brain stem';...
    'hippocampus_L';'amygdala_L';'accumbens_L';...
    'ventraldc_L';'cerebellum_R';'thalamus_R';...
    'caudate_R';'putamen_R';'pallidum_R';'hippocampus_R';...
    'amygdala_R';'accumbens_R';'ventraldc_R'};
NetName=[GordonName;asegName];
% extract the positive network and negative network
pos_NetMatrix = beta_NetMatrix .* (beta_NetMatrix>0);
neg_NetMatrix = beta_NetMatrix .* (beta_NetMatrix<0);

h=figure();
s_CircularPlot(pos_NetMatrix,NetName,'../Res_2_Results/Figure2C',hot(length(pos_NetMatrix)))
close(h);
h=figure();
s_CircularPlot(neg_NetMatrix,NetName,'../Res_2_Results/Figure2D',cool(length(pos_NetMatrix)))
close(h);